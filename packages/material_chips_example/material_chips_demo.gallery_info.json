[{"displayName":"Material Chips","docs":[{"name":"MaterialChipsComponent","selector":"material-chips","path":"angular_components/lib/material_chips/material_chips.dart","comment":"<p>A <strong>chips</strong> collection widget, displaying a list of objects as Chips.</p>\n<p><strong>Example usage:</strong></p>\n<pre><code>&lt;!-- Selection Model --&gt;\n&lt;material-chips [selectionModel]=\"mySelectedChips\"&gt;\n&lt;/material-chips&gt;\n</code></pre>\n<pre><code>&lt;!-- Static Chips --&gt;\n&lt;material-chips&gt;\n  &lt;material-chip&gt;My Chip&lt;/material-chip&gt;\n  &lt;material-chip&gt;Another Chip&lt;/material-chip&gt;\n&lt;/material-chips&gt;\n</code></pre>\n<p><strong>Inputs:</strong></p><ul><li><code>itemRenderer: ItemRenderer</code> -- A rendering function to render selection\n models as a string.</li><li><code>removable</code> -- Whether the chips can be removed.</li><li><code>selectionModel: SelectionModel</code> -- The selection model this component\ncontrols.</li></ul>\n","inputs":[{"annotation":"Input","name":"itemRenderer","bindingAlias":null,"type":"(dynamic) → String","comment":"<p> A function to render items as a string.</p>\n<p>Note: this <code>ItemRenderer</code> is only used when a <code>SelectionModel</code> is also\nprovided. If chips are manually rendered, the <code>itemRenderer</code> property will\nalso need to be manually set on them.</p>\n<p>Note about OnPush: If <code>ItemRenderer</code> is not a pure function and has\ninternal state that may render the same item differently, the reference\nitself must change in order to take effect.</p>\n","classPath":"angular_components/lib/material_chips/material_chips.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"removable","bindingAlias":null,"type":"bool","comment":"<p>Whether the chips can be removed.</p>\n","classPath":"angular_components/lib/material_chips/material_chips.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selectionModel","bindingAlias":null,"type":"SelectionModel<dynamic>","comment":"","classPath":"angular_components/lib/material_chips/material_chips.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[]},{"name":"MaterialChipComponent","selector":"material-chip","path":"angular_components/lib/material_chips/material_chip.dart","comment":"<p>A \"chip\" widget renders an object in the 'chip' format - a rounded box with\na shadow, typically used in a horizontal list. Any object implementing the\n<code>HasUIDisplayName</code> interface can be used, or no object at all.</p>\n<p>The delete button is only shown when a selectionModel is set on the widget\nor a removable property is true.\nWhen hasLeftIcon is true, the left-icon content should be set to a\n<code>MaterialIconComponent</code> or an SVG image.\nChip components are rendered in a <code>material-chips</code> component.</p>\n<p><strong>Example usage:</strong></p>\n<pre><code>&lt;!-- plain chip --&gt;\n&lt;material-chip&gt;Chip Text Here&lt;/material-chip&gt;\n&lt;!-- chip using model--&gt;\n&lt;material-chip model=\"myChip\"&gt;&lt;/material-chip&gt;\n&lt;!-- Chip which can be removed from a selection --&gt;\n&lt;material-chip model=\"myChip\" selectionModel=\"selectionModel\"&gt;&lt;/material-chip&gt;\n&lt;!-- Chip with custom delete action --&gt;\n&lt;material-chip model=\"myChip\" (remove)=\"myChips.remove(myChip)\"&gt;&lt;/material-chip&gt;\n</code></pre>\n","inputs":[{"annotation":"Input","name":"hasLeftIcon","bindingAlias":null,"type":"bool","comment":"<p>Whether the chip should show the custom icon, default to false.</p>\n","classPath":"angular_components/lib/material_chips/material_chip.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"itemRenderer","bindingAlias":null,"type":"(dynamic) → String","comment":"<p>An [ItemRenderer] function (takes an object and returns a string).</p>\n<p>If ItemRenderer is not state-less, and may return different values for\nthe same input item, then the ItemRenderer reference needs to update, or\nthat change will not be reflected.</p>\n<p>When provided, it is used to generate a label for the chip.</p>\n","classPath":"angular_components/lib/material_chips/material_chip.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"removable","bindingAlias":null,"type":"bool","comment":"<p>Whether the chip should show remove button, default to true.</p>\n","classPath":"angular_components/lib/material_chips/material_chip.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selectionModel","bindingAlias":null,"type":"SelectionModel<dynamic>","comment":"<p>A selection model to render as chips.</p>\n<p>This model should not be used for rendering, changes will not be\nreflected.</p>\n<p>Chips can be deselected from the model via user interaction unless\n<code>removable</code> is set to false.</p>\n","classPath":"angular_components/lib/material_chips/material_chip.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"value","bindingAlias":null,"type":"dynamic","comment":"<p>Data model to render.</p>\n<p>Provide your own label in the content of the chip, or provide an\n[ItemRenderer].</p>\n","classPath":"angular_components/lib/material_chips/material_chip.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"remove","bindingAlias":null,"type":"Stream<dynamic>","comment":"<p>Event fired when the chip is removed which returns the value of the chip.</p>\n","classPath":"angular_components/lib/material_chips/material_chip.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialChipsDemoComponent","name":"MaterialChipsDemoComponent","selector":"material-chips-demo","asset":"material_chips_example|lib/material_chips_demo.dart"}],"benchmarks":["material_chips_init"],"benchmarkPrefix":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":false}]