[{"displayName":"Material Checkbox","docs":[{"name":"MaterialCheckboxComponent","selector":"material-checkbox","path":"angular_components/lib/material_checkbox/material_checkbox.dart","comment":"<p><code>material-checkbox</code> is a button that can be either checked or unchecked.</p>\n<p>User can tap the checkbox to check or uncheck it.  Usually you use\ncheckboxes to allow user to select multiple options from a set.  If you\nhave a single ON/OFF option, avoid using a single checkbox and use\n<code>material-toggle</code> instead.</p>\n<p>We are not extending ButtonDecorator because we need to override several\nattributes, including role, tabindex, but most importantly because checkbox\nshould only be interactible with SPACE, while button is for both SPACE and\nENTER.</p>\n<p><strong>Properties:</strong></p><ul><li><code>checked: bool</code> -- Whether the checkbox should be selected.</li><li><code>disabled: bool</code> -- Whether the checkbox should not respond to events, and\nhave a style that suggests that interaction is not allowed.</li><li><code>readOnly: bool</code> -- Whether the checkbox can be changed by user\ninteraction.</li><li><code>indeterminate: bool</code> -- Whether the checkbox should be set to mixed\nstate.</li><li><code>indeterminateToChecked: bool</code> -- Whether the checkbox should go to\n checked state or unchecked when toggled from indeterminate state.</li><li><code>label: String</code> -- Label for the checkbox, alternatively use content.</li><li><code>themeColor: String</code> -- Color of the checkbox and ripple when checked.\n Example: '#FF00FF'. By default it is $mat-blue-500.\n Note that the themeColor is applied to the checkbox even when the box is\n unchecked, which deviates from the standard material spec. Use mixin to\n set themeColor unless you want this behavior.</li></ul>\n<p><strong>Attributes:</strong></p><ul><li><code>no-ink</code> -- set this attribute to disable the ripple effect on the chip.</li></ul>\n<p><strong>Events:</strong></p><ul><li><code>change: String</code> -- Published when state changes, i.e. icon changes.</li><li><code>checkedChange: bool</code> -- Published when the check state changes.</li><li><code>indeterminate: bool</code> -- Published when the indeterminate state changes.</li></ul>\n","inputs":[{"annotation":"Input","name":"checked","bindingAlias":null,"type":"bool","comment":"<p>Current state of the checkbox. This is user set-able state, via\n[toggleChecked()], so when checked, the [indeterminate] state gets\ncleared.\n<code>true</code> is CHECKED and <code>false</code> is not.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"disabled","bindingAlias":null,"type":"bool","comment":"","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"indeterminate","bindingAlias":null,"type":"bool","comment":"<p>Alternative state of the checkbox, not user set-able state. Between\n[checked] and [indeterminate], only one can be true, though both can be\nfalse.\n<code>true</code> is INDETERMINATE and <code>false</code> is not.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"indeterminateToChecked","bindingAlias":null,"type":"bool","comment":"<p>Determines the state to go into when [indeterminate] state is toggled.\n<code>true</code> will go to checked and <code>false</code> will go to unchecked.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"label","bindingAlias":null,"type":"String","comment":"<p>Label for the checkbox.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"readOnly","bindingAlias":null,"type":"bool","comment":"","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"themeColor","bindingAlias":null,"type":"String","comment":"<p>Color of the checkbox.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"onChange","bindingAlias":"change","type":"Stream<dynamic>","comment":"<p>Fired when checkbox state changes, sends [checkedStr], i.e. ARIA state.</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onChecked","bindingAlias":"checkedChange","type":"Stream<dynamic>","comment":"<p>Fired when checkbox is checked or unchecked, but not when set\nindeterminate. Sends the state of [checked].</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Output","name":"onIndeterminate","bindingAlias":"indeterminateChange","type":"Stream<dynamic>","comment":"<p>Fired when checkbox goes in and out of indeterminate state, but not when\nset to checked. Sends the state of [indeterminate];</p>\n","classPath":"angular_components/lib/material_checkbox/material_checkbox.dart","deprecated":false,"deprecatedMessage":null}]}],"demos":[{"type":"MaterialCheckboxExample","name":"MaterialCheckboxExample","selector":"material-checkbox-example","asset":"material_checkbox_example|lib/material_checkbox_example.dart"}],"benchmarks":["material_checkbox_init"],"benchmarkPrefix":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":false}]