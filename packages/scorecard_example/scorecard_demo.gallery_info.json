[{"displayName":"Scorecard","docs":[{"name":"ScorecardComponent","selector":"acx-scorecard","path":"angular_components/lib/scorecard/scorecard.dart","comment":"<p>ACUX standalone scorecard component.</p>\n<p>This component is meant to be reused/embedded in larger components.</p>\n<p><strong>Example usage:</strong></p>\n<pre><code> &lt;acx-scorecard\n     label=\"Estimated earnings\"\n     value=\"$158.22\"\n     description=\"+$24.20 (15%)\"\n     suggestionAfter=\"of last quarter\"\n     changeType=\"POSITIVE\"&gt;\n &lt;/acx-scorecard&gt;\n</code></pre>\n<p>To make a scorecard <code>selectable</code>, simply flip on the flag. Then [selected]\ncan be used to change and be notified of changes to the selection state:</p>\n<pre><code>&lt;acx-scorecard\n    selectable\n    label=\"Estimated earnings\"\n    value=\"$158.22\"\n    [(selected)]=\"isSelected\"&gt;\n&lt;/acx-scorecard&gt;\n</code></pre>\n<p>To right-align the text in a scorecard add the CSS class 'right-align':</p>\n<pre><code>&lt;acx-scorecard class=\"right-align\"&gt;&lt;/acx-scorecard&gt;\n</code></pre>\n<p>Content projection can also be used with the <name> element to insert custom\ncontent into the label area, with <value> to insert custom content into\nthe value area, or with <description> to insert custom content into the\ndescription area:</p>\n<pre><code>&lt;acx-scorecard ...&gt;\n  &lt;name&gt;Estimated earnings &lt;i&gt;(NEW)&lt;/i&gt;&lt;/name&gt;\n  &lt;value&gt;&lt;glyph icon=\"mode_edit\"&gt;&lt;/glyph&gt;&lt;/value&gt;\n  &lt;description&gt;&lt;b&gt;On track&lt;/b&gt;&lt;/description&gt;\n&lt;/acx-scorecard&gt;\n</code></pre>\n<p><strong>Inputs:</strong></p><ul><li><code>label: String</code> -- The title of the scorecard.</li><li><code>value: String</code> -- The value of the scorecard.</li><li><code>description: String</code> -- Short description of the scorecard.</li><li><code>changeGlyph: bool</code> -- Whether to display a small change arrow glyph in\nthe description.</li><li><code>suggestionBefore: String</code> -- Suggestion text before the description.</li><li><code>suggestionAfter: String</code> -- Suggestion text after the description.</li><li><code>extraBig: bool</code> -- Whether to use a larger class style.</li><li><code>changeType: String</code> -- The type of change: POSITIVE, NEGATIVE, NEUTRAL.</li><li><code>selectable: bool</code> -- Whether a scorecard is selectable.</li><li><code>selected: bool</code> -- Whether the scorecard is selected.</li><li><code>selectedColor: Color</code> -- Color to apply to the selected scorecard.</li></ul>\n<p><strong>Outputs:</strong></p><ul><li><code>selectedChange</code> -- Fired when selection state changes.</li></ul>\n","inputs":[{"annotation":"Input","name":"changeGlyph","bindingAlias":null,"type":"bool","comment":"<p>Whether to display a small change arrow glyph in the description;\noptional.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"changeType","bindingAlias":null,"type":"String","comment":"<p>Set the type of change depicted by scorecard.</p>\n<p>This determines the style of the description. Possible values are:</p><ul><li>'POSITIVE'</li><li>'NEGATIVE'</li><li>'NEUTRAL' (default)</li></ul>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"description","bindingAlias":null,"type":"String","comment":"<p>Short description on the scorecard; optional.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"extraBig","bindingAlias":null,"type":"bool","comment":"<p>Whether to use the \"big\" class style for scorecards; optional.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"label","bindingAlias":null,"type":"String","comment":"<p>The title of the scorecard.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selectable","bindingAlias":null,"type":"bool","comment":"","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selected","bindingAlias":null,"type":"bool","comment":"<p>Whether the scorecard is selected.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"selectedColor","bindingAlias":null,"type":"Color","comment":"<p>The [Color] to apply to the scorecard background when it is selected.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"suggestionAfter","bindingAlias":null,"type":"String","comment":"<p>A piece of suggestion text after the description; optional.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"suggestionBefore","bindingAlias":null,"type":"String","comment":"<p>A piece of suggestion text before the description; optional.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"tooltip","bindingAlias":null,"type":"String","comment":"<p>The value displayed in a tooltip when the users hovers over the value.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"value","bindingAlias":null,"type":"String","comment":"<p>The value displayed to the user.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[{"annotation":"Output","name":"selectedChange","bindingAlias":null,"type":"Stream<bool>","comment":"<p>Fired when the selection state changes.</p>\n","classPath":"angular_components/lib/scorecard/scorecard.dart","deprecated":false,"deprecatedMessage":null}]},{"name":"ScoreboardComponent","selector":"acx-scoreboard","path":"angular_components/lib/scorecard/scoreboard.dart","comment":"<p>ACUX Scoreboard component</p>\n<p>This component manages a row of scorecards.</p>\n<p><strong>Example usage:</strong></p>\n<pre><code> &lt;acx-scoreboard scrollable [type]=\"toggle\"&gt;\n   &lt;acx-scorecard\n       label=\"Estimated earnings\"\n       value=\"$158.22\"\n       description=\"+$24.20 (15%)\"\n       changeType=\"positive\"&gt;\n   &lt;/acx-scorecard&gt;\n   &lt;acx-scorecard\n       label=\"Ad RPM\"\n       value=\"$0.58\"\n       description=\"-$0.02 (3%)\"\n       changeType=\"negative\"&gt;\n   &lt;/acx-scorecard&gt;\n &lt;/acx-scoreboard&gt;\n</code></pre>\n<p><strong>Inputs:</strong></p><ul><li><code>type: ScoreboardType</code> -- Type of scoreboard, e.g., standard, selectable,\nradio, toggle.</li><li><code>enableUniformWidths: bool</code> -- Whether scorecards in the scoreboard\nshould have uniform widths.</li><li><code>scrollable: bool</code> -- Whether the scoreboard is scrollable.</li><li><code>resetOnCardChanges</code> -- Whether to reset the card selection when there are\ncard changes.</li><li><code>isVertical: bool</code> -- Whether the scorecard is displayed vertically.\nDefaults to false.</li></ul>\n","inputs":[{"annotation":"Input","name":"isVertical","bindingAlias":null,"type":"bool","comment":"<p>Whether the scorecard is displayed vertically. Defaults to false.</p>\n","classPath":"angular_components/lib/scorecard/scoreboard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"resetOnCardChanges","bindingAlias":null,"type":"bool","comment":"<p>Whether to reset the card selection when there are card changes.</p>\n<p>If a card is added or removed, and this is set to true, then all\ncards will be deselected. For [ScoreboardType.radio], the first card will\nbe selected.</p>\n","classPath":"angular_components/lib/scorecard/scoreboard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"scrollable","bindingAlias":null,"type":"bool","comment":"<p>Whether allow scrolling the scoreboard via scroll buttons.</p>\n<p>Scrollable property can be set dynamically during app runtime -- will add\nor remove window resize listener depending on state of <code>scrollable</code>.</p>\n","classPath":"angular_components/lib/scorecard/scoreboard.dart","deprecated":false,"deprecatedMessage":null},{"annotation":"Input","name":"type","bindingAlias":null,"type":"ScoreboardType","comment":"","classPath":"angular_components/lib/scorecard/scoreboard.dart","deprecated":false,"deprecatedMessage":null}],"outputs":[]}],"demos":[{"type":"ScorecardDemoComponent","name":"ScorecardDemoComponent","selector":"scorecard-demo","asset":"scorecard_example|lib/scorecard_demo.dart"}],"benchmarks":["scorecard_init","scoreboard_init"],"benchmarkPrefix":null,"owners":null,"uxOwners":null,"relatedUrls":null,"showGeneratedDocs":false}]